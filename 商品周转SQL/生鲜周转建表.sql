--增加 DC用途、是否联采
drop table csx_tmp.report_wms_r_d_turnover_fresh_fr;
CREATE TABLE `csx_tmp.report_wms_r_d_turnover_fresh_fr`(
level_id STRING COMMENT '层级分组',
  `region_code` string comment '大区编码', 
  `region_name` string comment '大区名称', 
  `dist_code` string comment '省区编码', 
  `dist_name` string comment '省区名称', 
  `city_code` string comment '城市编码', 
  `city_name` string comment '城市名称', 
  `dc_code` string comment 'DC编码',
  `dc_name` string comment 'dc名称', 
  `classify_large_code` string comment '管理一级分类', 
  `classify_large_name` string comment '管理一级分类名称', 
  `classify_middle_code` string comment '管理二级分类', 
  `classify_middle_name` string comment '管理二级分类', 
  `classify_small_code` string comment'管理三级分类', 
  `classify_small_name` string comment'管理三级分类', 
  `final_qty` decimal(38,6) comment '期末库存量', 
  `final_amt` decimal(38,6) comment '期末库存额', 
  `period_inv_amt_30day` decimal(38,6) comment '期间30天库存成本', 
  `cost_sum` decimal(38,6) comment '期间30天成本：销售成本+领用+原料消耗', 
  `turnover_days` decimal(38,6)comment '30天周转天数', 
  `receipt_amt` decimal(38,6) comment '近30天领用成本', 
  `receipt_qty` decimal(38,6) comment '近30天领用数量', 
  `material_take_amt` decimal(38,6)comment '近30天原料消耗额',
  `material_take_qty` decimal(38,6)comment '近30天原料消耗量', 
  `cost_30day` decimal(38,6) comment '近30天销售成本', 
  `stock_sku` bigint comment '库存SKU数', 
  `final_amt_7` decimal(38,6) comment '0-7天库存金额', 
  `final_amt_15` decimal(38,6) comment '7-15库存金额', 
  `final_amt_40` decimal(38,6) comment '15-40天库存金额', 
  `final_amt_365` decimal(38,6) comment '40-365库存金额', 
  `final_amt_365_last` decimal(38,6) comment '365天以库存金额', 
  `stock_sku_7` bigint comment '0-7天SKU', 
  `stock_sku_15` bigint comment '7-15天SKU', 
  `stock_sku_40` bigint comment '15-40天SKU', 
  `stock_sku_365` bigint comment '40-365天SKU', 
  `stock_sku_365_last` bigint comment '365天以上SKU',
  `stock_sku_ratio_7` decimal(38,6)  comment '0-7天SKU占比', 
  `stock_sku_ratio_15` decimal(38,6)  comment '7-15天SKU占比', 
  `stock_sku_ratio_40` decimal(38,6)  comment '15-40天SKU占比', 
  `stock_sku_ratio_365` decimal(38,6)  comment '40-365天SKU占比', 
  `stock_sku_ratio_365_last` decimal(38,6)  comment '365天以上SKU占比',
  `final_amt_ratio_7` decimal(38,6) comment '0-7天库存金额占比', 
  `final_amt_ratio_15` decimal(38,6) comment '7-15库存金额占比', 
  `final_amt_ratio_40` decimal(38,6) comment '15-40天库存金额占比', 
  `final_amt_ratio_365` decimal(38,6) comment '40-365库存金额占比', 
  `final_amt_ratio_365_last` decimal(38,6) comment '365天以库存金额占比',
  purpose_code string comment 'DC用途统计',
  purpose_name string comment 'DC用途名称',
  joint_purchase_flag string comment '联采商品统计 0 否 1 是',
  update_time TIMESTAMP comment '更新日期'
  )comment '生鲜库存周转占比'
 partitioned by (sdt string COMMENT '数据分区日期')
    STORED AS PARQUET 
;

set hive.map.aggr = true;
set hive.groupby.skewindata=false;
set dt='20210725';



SELECT zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       a.goods_id,
       sum(final_qty) final_qty,
       sum(final_amt) as final_amt,
       sum(period_inv_amt_30day) as period_inv_amt_30day,
       sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)) as cost_sum,
       coalesce(sum(coalesce(period_inv_amt_30day,0))/sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)),0) as turnover_days,
       sum(coalesce(receipt_amt,0)) as receipt_amt,
       sum(coalesce(receipt_qty,0)) as receipt_qty,
       sum(coalesce(material_take_amt,0)) as material_take_amt,
       sum(coalesce(material_take_qty,0)) as material_take_qty,
       sum(cost_30day) as cost_30day 
FROM csx_tmp.ads_wms_r_d_goods_turnover a 
join
(select location_code,zone_id,zone_name from csx_dw.csx_shop 
where sdt='current' 
    and table_type=1 
    and purchase_org !='P620' 
    and purpose_code in ('01','02','03','08','07') ) b on a.dc_code=b.location_code
WHERE sdt=${hiveconf:dt}
  AND business_division_code='11'
  and (final_qty!=0 and  a.period_inv_qty_30day !=0 and a.cost_30day!=0 )
GROUP BY zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id
 GROUPING SETS
 ((zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       goods_id),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       goods_id), 
       -- 城市汇总
      ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       goods_id),
       (dist_code,
       dist_name,
       city_code,
       city_name,
       goods_id),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id),
        ( zone_id,
        zone_name,dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id),
        ( zone_id,
        zone_name,dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       goods_id),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       goods_id)
       )               
      ;

drop table if exists csx_tmp.temp_turn_01 ;
CREATE temporary table csx_tmp.temp_turn_01 as 
SELECT zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       sum(final_qty) final_qty,
       sum(final_amt) as final_amt,
       sum(period_inv_amt_30day) as period_inv_amt_30day,
       sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)) as cost_sum,
       coalesce(sum(coalesce(period_inv_amt_30day,0))/sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)),0) as turnover_days,
       sum(coalesce(receipt_amt,0)) as receipt_amt,
       sum(coalesce(receipt_qty,0)) as receipt_qty,
       sum(coalesce(material_take_amt,0)) as material_take_amt,
       sum(coalesce(material_take_qty,0)) as material_take_qty,
       sum(cost_30day) as cost_30day,
       count(DISTINCT case when( period_inv_qty!=0 or cost_30day!=0) then  goods_id end ) as stock_sku
FROM csx_tmp.ads_wms_r_d_goods_turnover a 
join
(select location_code,zone_id,zone_name from csx_dw.csx_shop 
where sdt='current' 
    and table_type=1 
    and purchase_org !='P620' 
    and purpose_code in ('01','02','03','08','07') ) b on a.dc_code=b.location_code
WHERE sdt=${hiveconf:dt}
  AND business_division_code='11'
  and (final_qty!=0 and  a.period_inv_qty_30day !=0 and a.cost_30day!=0 )
 -- and dc_code='W0A6'
 -- and a.classify_middle_code='B0304'
 GROUP BY  zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name
 GROUPING SETS
 (( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name), 
       -- 城市汇总
      ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name),
       (dist_code,
       dist_name,
       city_code,
       city_name),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name),
        ( zone_id,
        zone_name,dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name),
        ( zone_id,
        zone_name,dist_code,
       dist_name,
       classify_large_code,
       classify_large_name ),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name  )
       )               
    ;

-- SKU 占比

drop table if exists csx_tmp.temp_turn_02 ;
CREATE temporary table csx_tmp.temp_turn_02 as 
SELECT zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       sum(case when a.days_turnover_30 >= 0 and a.days_turnover_30 <7 then  final_amt end ) as final_amt_7,
       sum(case when a.days_turnover_30 >= 7 and a.days_turnover_30 <15 then  final_amt end ) as final_amt_15,
       sum(case when a.days_turnover_30 >= 15 and a.days_turnover_30 < 40 then  final_amt end ) as final_amt_40,
       sum(case when a.days_turnover_30 >= 40 and a.days_turnover_30 < 365 then  final_amt end ) as final_amt_365,
       sum(case when a.days_turnover_30 >= 365 then  final_amt end ) as final_amt_365_last,
       count(DISTINCT case when (a.days_turnover_30 >= 0 and a.days_turnover_30 <7 ) then  a.goods_id end ) as stock_sku_7,
       count(DISTINCT case when (a.days_turnover_30 >= 7 and a.days_turnover_30 <15 )  then  goods_id end ) as stock_sku_15,
       count(DISTINCT case when (a.days_turnover_30 >= 15 and a.days_turnover_30 < 40 )   then  goods_id end ) as stock_sku_40,
       count(DISTINCT case when (a.days_turnover_30 >= 40 and a.days_turnover_30 < 365 )   then  goods_id end ) as stock_sku_365,
       count(DISTINCT case when a.days_turnover_30 >= 365   then  goods_id end ) as stock_sku_365_last
FROM csx_tmp.ads_wms_r_d_goods_turnover a 
join
(select location_code,zone_id,zone_name from csx_dw.csx_shop 
where sdt='current' 
    and table_type=1 
    -- 剔除平台DC P620采购组织
    and purchase_org !='P620' 
    --剔除合伙人、彩食鲜小店
    and purpose_code in ('01','02','03','08','07') ) b on a.dc_code=b.location_code
WHERE sdt=${hiveconf:dt}
  AND (business_division_code='11'
 -- and dc_code='W0A6'
  --and a.classify_middle_code='B0304'
  and (final_qty!=0 and  a.period_inv_qty_30day !=0 and a.cost_30day!=0 ))
  and ( period_inv_qty!=0 or cost_30day!=0 )
  
 GROUP BY  zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name
 GROUPING SETS
 (( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name), 
       -- 城市汇总
      ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name),
       (dist_code,
       dist_name,
       city_code,
       city_name),
       ( zone_id,
        zone_name,
        dist_code,
        dist_name,
        classify_large_code,
        classify_large_name,
        classify_middle_code,
        classify_middle_name,
        classify_small_code,
        classify_small_name),
        ( zone_id,
        zone_name,
        dist_code,
        dist_name,
        classify_large_code,
        classify_large_name,
        classify_middle_code,
        classify_middle_name),
        ( zone_id,
        zone_name,
        dist_code,
        dist_name,
        classify_large_code,
        classify_large_name ),
       (zone_id,
        zone_name,
        dist_code,
        dist_name  )
       )               
    ;
 
 

 drop table if exists csx_tmp.temp_turn_03;
 create temporary table csx_tmp.temp_turn_03 as 
 select 
       coalesce(a.zone_id,'00') zone_id,
       coalesce(a.zone_name,'全国') as zone_name,
       coalesce(a.dist_code,'00') as dist_code,
       coalesce(a.dist_name,'-') as dist_name,
       coalesce(a.city_code,'00') as city_code,
       coalesce(a.city_name,'-') as city_name,
       coalesce(a.dc_code,'00') dc_code,
       coalesce(a.dc_name,'-') dc_name,
       coalesce(a.classify_large_code,'00') classify_large_code,
       coalesce(a.classify_large_name,'-') classify_large_name,
       coalesce(a.classify_middle_code,'00') classify_middle_code,
       coalesce(a.classify_middle_name,'-') classify_middle_name,
       coalesce(a.classify_small_code,'00')classify_small_code,
       coalesce(a.classify_small_name,'-')classify_small_name,
       final_qty,
       final_amt,
       period_inv_amt_30day,
       cost_sum,
       turnover_days,
       receipt_amt,
       receipt_qty,
       material_take_amt,
       material_take_qty,
       cost_30day,
       stock_sku,
       coalesce(final_amt_7,0) as final_amt_7,
       coalesce(final_amt_15,0) as final_amt_15,
       coalesce(final_amt_40,0) as final_amt_40,
       coalesce(final_amt_365,0) as final_amt_365,
       coalesce(final_amt_365_last,0) as final_amt_365_last,
       coalesce(stock_sku_7,0) as stock_sku_7,
       coalesce(stock_sku_15,0) as stock_sku_15,
       coalesce(stock_sku_40,0) as stock_sku_40,
       coalesce(stock_sku_365,0) as stock_sku_365,
       coalesce(stock_sku_365_last,0) as stock_sku_365_last,
       current_timestamp(),
       ${hiveconf:dt}
from csx_tmp.temp_turn_01 a 
 left join
 csx_tmp.temp_turn_02 b on coalesce(a.zone_id,'')=coalesce(b.zone_id ,'')
    and coalesce(a.dist_code,'')=coalesce(b.dist_code ,'')
    and coalesce(a.city_code,'')=coalesce(b.city_code,'')
    and coalesce(a.dc_code,'')=coalesce(b.dc_code ,'')
    and coalesce(a.classify_small_code,'')=coalesce(b.classify_small_code,'')
    and coalesce(a.classify_large_code,'')=coalesce(b.classify_large_code ,'')
    and coalesce(a.classify_middle_code,'')=coalesce(b.classify_middle_code,'')
 -- where a.city_code is null
 -- and a.dist_code='15'
 ;
 
 -- select * from csx_tmp.temp_turn_03;
 
  set hive.exec.dynamic.partition.mode=nonstrict;
  insert overwrite table csx_tmp.report_wms_r_d_turnover_fresh_fr partition(sdt)
     select 
        case when zone_id ='00' then '1'
    when dist_code='00' then '2'
    when city_code='00' then '3'
    when dc_code='00' then '4'
    else '5' end level_id,
       zone_id as region_code,
       zone_name region_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       final_qty,
       final_amt,
       period_inv_amt_30day,
       cost_sum,
       turnover_days,
       receipt_amt,
       receipt_qty,
       material_take_amt,
       material_take_qty,
       cost_30day,
       stock_sku,
       final_amt_7,
       final_amt_15,
       final_amt_40,
       final_amt_365,
       final_amt_365_last,
       stock_sku_7,
       stock_sku_15,
       stock_sku_40,
       stock_sku_365,
       stock_sku_365_last,
       coalesce(stock_sku_7/stock_sku,0) as stock_sku_ratio_7,
       coalesce(stock_sku_15/stock_sku,0) as stock_sku_ratio_15,
       coalesce(stock_sku_40/stock_sku,0) as stock_sku_ratio_40,
       coalesce(stock_sku_365/stock_sku,0) as stock_sku_ratio_365,
       coalesce(stock_sku_365_last/stock_sku,0) as stock_sku_ratio_365_last,
       coalesce(final_amt_7/final_amt,0) as final_amt_ratio_7,
       coalesce(final_amt_15/final_amt,0) as final_amt_ratio_15,
       coalesce(final_amt_40/final_amt,0) as final_amt_ratio_40,
       coalesce(final_amt_365/final_amt,0) as final_amt_ratio_365,
       coalesce(final_amt_365_last/final_amt,0) as final_amt_ratio_365_last,
       current_timestamp(),
       ${hiveconf:dt}
from  csx_tmp.temp_turn_03 a
;
  
  
  
  select a.*  from csx_tmp.report_wms_r_d_turnover_fresh_fr a where dist_code='15';