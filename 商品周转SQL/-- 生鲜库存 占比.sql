-- 生鲜库存 占比
-- set hive.map.aggr = true;
set hive.groupby.skewindata=false;
set dt='20210727';

-- 总类型周转库存占比

drop table if exists csx_tmp.temp_turn_00 ;
CREATE temporary table csx_tmp.temp_turn_00 as 
SELECT purpose_code,
       zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       a.goods_id,
       '' as joint_purchase_flag,
       sum(final_qty) final_qty,
       sum(final_amt) as final_amt,
       sum(period_inv_qty_30day) as period_inv_qty_30day,
       sum(period_inv_amt_30day) as period_inv_amt_30day,
       sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)) as cost_sum,
       CASE WHEN coalesce(sum(coalesce(period_inv_amt_30day,0))/sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)),0)<0 THEN 0 
        ELSE
        coalesce(sum(coalesce(period_inv_amt_30day,0))/sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)),0) 
        END   as turnover_days,
       sum(coalesce(receipt_amt,0)) as receipt_amt,
       sum(coalesce(receipt_qty,0)) as receipt_qty,
       sum(coalesce(material_take_amt,0)) as material_take_amt,
       sum(coalesce(material_take_qty,0)) as material_take_qty,
       sum(cost_30day) as cost_30day 
FROM csx_tmp.ads_wms_r_d_goods_turnover a 
join
(select location_code,zone_id,zone_name,purpose_code from csx_dw.csx_shop 
where sdt='current' 
    and table_type=1 
    and purchase_org !='P620' 
    and purpose_code in ('01','02','03','08','07') ) b on a.dc_code=b.location_code
WHERE sdt=${hiveconf:dt}
  AND business_division_code='11'
  and (final_qty!=0 and  a.period_inv_qty_30day !=0 and a.cost_30day!=0 )
GROUP BY zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       purpose_code
 GROUPING SETS
 ((zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       goods_id,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       goods_id,
       purpose_code), 
       -- 城市汇总
      ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id,purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       goods_id,
       purpose_code),
       (zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       goods_id,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       purpose_code),
        ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id,
       purpose_code),
        ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       goods_id,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       goods_id,
       purpose_code),
       (classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       purpose_code),
       (classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id,
       purpose_code),
        (classify_large_code,
       classify_large_name,
       goods_id,
       purpose_code),
       (purpose_code,
       goods_id)
       )               
 union all 
 SELECT purpose_code,
       zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       a.goods_id,
       joint_purchase_flag,
       sum(final_qty) final_qty,
       sum(final_amt) as final_amt,
       sum(period_inv_qty_30day) as period_inv_qty_30day,
       sum(period_inv_amt_30day) as period_inv_amt_30day,
       sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)) as cost_sum,
       CASE WHEN coalesce(sum(coalesce(period_inv_amt_30day,0))/sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)),0)<0 THEN 0 
        ELSE
        coalesce(sum(coalesce(period_inv_amt_30day,0))/sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)),0) 
        END   as turnover_days,
       sum(coalesce(receipt_amt,0)) as receipt_amt,
       sum(coalesce(receipt_qty,0)) as receipt_qty,
       sum(coalesce(material_take_amt,0)) as material_take_amt,
       sum(coalesce(material_take_qty,0)) as material_take_qty,
       sum(cost_30day) as cost_30day 
FROM csx_tmp.ads_wms_r_d_goods_turnover a 
join
(select location_code,zone_id,zone_name,purpose_code from csx_dw.csx_shop 
where sdt='current' 
    and table_type=1 
    and purchase_org !='P620' 
    and purpose_code in ('01','02','03','08','07') ) b on a.dc_code=b.location_code
WHERE sdt=${hiveconf:dt}
  AND business_division_code='11'
  and (final_qty!=0 and  a.period_inv_qty_30day !=0 and a.cost_30day!=0 )
GROUP BY zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       joint_purchase_flag,
       purpose_code
 GROUPING SETS
 ((zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       goods_id,
       joint_purchase_flag,
       purpose_code), 
       -- 城市汇总
      ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
       (zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
        ( zone_id,
        zone_name,dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
        ( zone_id,
        zone_name,dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       goods_id,
       joint_purchase_flag,
       purpose_code
       ),
       (classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
        (classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
        (classify_large_code,
       classify_large_name,
       goods_id,
       joint_purchase_flag,
       purpose_code),
       (joint_purchase_flag,
       purpose_code,       
       goods_id)
       ) 
 ;

-- select * from csx_tmp.temp_turn_00 where dist_code ='23';

drop table if exists csx_tmp.temp_turn_01 ;
CREATE temporary table csx_tmp.temp_turn_01 as 
SELECT purpose_code,
       zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       '' joint_purchase_flag,
       sum(final_qty) final_qty,
       sum(final_amt) as final_amt,
       sum(period_inv_amt_30day) as period_inv_amt_30day,
       sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)) as cost_sum,
       coalesce(sum(coalesce(period_inv_amt_30day,0))/sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)),0) as turnover_days,
       sum(coalesce(receipt_amt,0)) as receipt_amt,
       sum(coalesce(receipt_qty,0)) as receipt_qty,
       sum(coalesce(material_take_amt,0)) as material_take_amt,
       sum(coalesce(material_take_qty,0)) as material_take_qty,
       sum(cost_30day) as cost_30day,
       count(DISTINCT case when( period_inv_qty!=0 or cost_30day!=0) then  goods_id end ) as stock_sku
FROM csx_tmp.ads_wms_r_d_goods_turnover a 
join
(select location_code,zone_id,zone_name,purpose_code from csx_dw.csx_shop 
where sdt='current' 
    and table_type=1 
    and purchase_org !='P620' 
    and purpose_code in ('01','02','03','08','07') ) b on a.dc_code=b.location_code
WHERE sdt=${hiveconf:dt}
  AND business_division_code='11'
  and (final_qty!=0 and  a.period_inv_qty_30day !=0 and a.cost_30day!=0 )
 -- and dc_code='W0A6'
 -- and a.classify_middle_code='B0304'
 GROUP BY  zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       purpose_code
 GROUPING SETS
 (( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       purpose_code), 
       -- 城市汇总
      ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       purpose_code
       ),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       purpose_code),
       (zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       purpose_code),
        ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       purpose_code),
        ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       purpose_code ),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       purpose_code  ),
       (classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name),
       (classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name),
       (classify_large_code,
       classify_large_name,
       purpose_code),
       (purpose_code)
       ) 
    union all 
    SELECT purpose_code,
       zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       joint_purchase_flag,
       sum(final_qty) final_qty,
       sum(final_amt) as final_amt,
       sum(period_inv_amt_30day) as period_inv_amt_30day,
       sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)) as cost_sum,
       coalesce(sum(coalesce(period_inv_amt_30day,0))/sum(coalesce(receipt_amt,0)+coalesce(material_take_amt,0)+coalesce(cost_30day,0)),0) as turnover_days,
       sum(coalesce(receipt_amt,0)) as receipt_amt,
       sum(coalesce(receipt_qty,0)) as receipt_qty,
       sum(coalesce(material_take_amt,0)) as material_take_amt,
       sum(coalesce(material_take_qty,0)) as material_take_qty,
       sum(cost_30day) as cost_30day,
       count(DISTINCT case when( period_inv_qty!=0 or cost_30day!=0) then  goods_id end ) as stock_sku
FROM csx_tmp.ads_wms_r_d_goods_turnover a 
join
(select location_code,zone_id,zone_name,purpose_code from csx_dw.csx_shop 
where sdt='current' 
    and table_type=1 
    and purchase_org !='P620' 
    and purpose_code in ('01','02','03','08','07') ) b on a.dc_code=b.location_code
WHERE sdt=${hiveconf:dt}
  AND business_division_code='11'
  and (final_qty!=0 and  a.period_inv_qty_30day !=0 and a.cost_30day!=0 )
 -- and dc_code='W0A6'
 -- and a.classify_middle_code='B0304'
 GROUP BY  zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       joint_purchase_flag,
       purpose_code
 GROUPING SETS
 (( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       joint_purchase_flag,
       purpose_code
       ),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       joint_purchase_flag,
       purpose_code), 
       -- 城市汇总
      ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       classify_large_code,
       classify_large_name,
       joint_purchase_flag,
       purpose_code),
       (zone_id,
        zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       joint_purchase_flag,
       purpose_code
       ),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       joint_purchase_flag,
       purpose_code),
        ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       joint_purchase_flag,
       purpose_code),
        ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       classify_large_code,
       classify_large_name,
       joint_purchase_flag,
       purpose_code),
       ( zone_id,
        zone_name,
        dist_code,
       dist_name,
       joint_purchase_flag,
       purpose_code),

       (classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       joint_purchase_flag,
       purpose_code),
       (classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       joint_purchase_flag),
       (classify_large_code,
       classify_large_name,
       joint_purchase_flag,
       purpose_code) ,
       (purpose_code,
       joint_purchase_flag)
       ) 
    ;

-- SKU 占比

drop table if exists csx_tmp.temp_turn_02 ;
CREATE temporary table csx_tmp.temp_turn_02 as 
SELECT purpose_code,
       zone_id,
       zone_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       a.joint_purchase_flag,
       sum(case when a.turnover_days >= 0 and a.turnover_days <7 then  final_amt end ) as final_amt_7,
       sum(case when a.turnover_days >= 7 and a.turnover_days <15 then  final_amt end ) as final_amt_15,
       sum(case when a.turnover_days >= 15 and a.turnover_days < 40 then  final_amt end ) as final_amt_40,
       sum(case when a.turnover_days >= 40 and a.turnover_days < 365 then  final_amt end ) as final_amt_365,
       sum(case when a.turnover_days >= 365 then  final_amt end ) as final_amt_365_last,
       count(DISTINCT case when (a.turnover_days >= 0 and a.turnover_days <7 ) then  a.goods_id end ) as stock_sku_7,
       count(DISTINCT case when (a.turnover_days >= 7 and a.turnover_days <15 )  then  goods_id end ) as stock_sku_15,
       count(DISTINCT case when (a.turnover_days >= 15 and a.turnover_days < 40 )   then  goods_id end ) as stock_sku_40,
       count(DISTINCT case when (a.turnover_days >= 40 and a.turnover_days < 365 )   then  goods_id end ) as stock_sku_365,
       count(DISTINCT case when a.turnover_days >= 365   then  goods_id end ) as stock_sku_365_last
FROM csx_tmp.temp_turn_00  a 
where  (final_qty!=0 and  a.period_inv_qty_30day !=0 and a.cost_30day!=0 )
 and ( period_inv_qty_30day!=0 or cost_sum!=0)
 GROUP BY zone_id,
        zone_name,
        dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       joint_purchase_flag,
        purpose_code 
    ;
 
 

 drop table if exists csx_tmp.temp_turn_03;
 create temporary table csx_tmp.temp_turn_03 as 
 select coalesce(a.purpose_code,'00')zone_id,
       coalesce(a.zone_id,'00') zone_id,
       coalesce(a.zone_name,'全国') as zone_name,
       coalesce(a.dist_code,'00') as dist_code,
       coalesce(a.dist_name,'-') as dist_name,
       coalesce(a.city_code,'00') as city_code,
       coalesce(a.city_name,'-') as city_name,
       coalesce(a.dc_code,'00') dc_code,
       coalesce(a.dc_name,'-') dc_name,
       coalesce(a.classify_large_code,'00') classify_large_code,
       coalesce(a.classify_large_name,'-') classify_large_name,
       coalesce(a.classify_middle_code,'00') classify_middle_code,
       coalesce(a.classify_middle_name,'-') classify_middle_name,
       coalesce(a.classify_small_code,'00')classify_small_code,
       coalesce(a.classify_small_name,'-')classify_small_name,
        coalesce(a.joint_purchase_flag,'') as joint_purchase_flag,
       final_qty,
       final_amt,
       period_inv_amt_30day,
       cost_sum,
       turnover_days,
       receipt_amt,
       receipt_qty,
       material_take_amt,
       material_take_qty,
       cost_30day,
       stock_sku,
       coalesce(final_amt_7,0) as final_amt_7,
       coalesce(final_amt_15,0) as final_amt_15,
       coalesce(final_amt_40,0) as final_amt_40,
       coalesce(final_amt_365,0) as final_amt_365,
       coalesce(final_amt_365_last,0) as final_amt_365_last,
       coalesce(stock_sku_7,0) as stock_sku_7,
       coalesce(stock_sku_15,0) as stock_sku_15,
       coalesce(stock_sku_40,0) as stock_sku_40,
       coalesce(stock_sku_365,0) as stock_sku_365,
       coalesce(stock_sku_365_last,0) as stock_sku_365_last,
       current_timestamp(),
       ${hiveconf:dt}
from csx_tmp.temp_turn_01 a 
 left join
 csx_tmp.temp_turn_02 b on coalesce(a.zone_id,'')=coalesce(b.zone_id ,'')
    and coalesce(a.dist_code,'')=coalesce(b.dist_code ,'')
    and coalesce(a.city_code,'')=coalesce(b.city_code,'')
    and coalesce(a.dc_code,'')=coalesce(b.dc_code ,'')
    and coalesce(a.classify_small_code,'')=coalesce(b.classify_small_code,'')
    and coalesce(a.classify_large_code,'')=coalesce(b.classify_large_code ,'')
    and coalesce(a.classify_middle_code,'')=coalesce(b.classify_middle_code,'')
    and coalesce(a.joint_purchase_flag,'')=coalesce(b.joint_purchase_flag,'')
    and coalesce(a.purpose_code,'')=coalesce(b.purpose_code,'')
--  where  a.zone_id='3'
 ;
 
 -- select * from csx_tmp.temp_turn_03 where zone_id='00';
 -- select * from  csx_tmp.temp_turn_01  where zone_id is null  and dist_code is not null ;
 
  set hive.exec.dynamic.partition.mode=nonstrict;
  
  insert overwrite table csx_tmp.report_wms_r_d_turnover_fresh_fr partition(sdt)
     select 
        case when zone_id ='00' then '1'
    when dist_code='00' then '2'
    when city_code='00' then '3'
    when dc_code='00' then '4'
    else '5' end level_id,
       zone_id as region_code,
       zone_name region_name,
       dist_code,
       dist_name,
       city_code,
       city_name,
       dc_code,
       dc_name,
       classify_large_code,
       classify_large_name,
       classify_middle_code,
       classify_middle_name,
       classify_small_code,
       classify_small_name,
       final_qty,
       final_amt,
       period_inv_amt_30day,
       cost_sum,
       turnover_days,
       receipt_amt,
       receipt_qty,
       material_take_amt,
       material_take_qty,
       cost_30day,
       stock_sku,
       final_amt_7,
       final_amt_15,
       final_amt_40,
       final_amt_365,
       final_amt_365_last,
       stock_sku_7,
       stock_sku_15,
       stock_sku_40,
       stock_sku_365,
       stock_sku_365_last,
       coalesce(stock_sku_7/stock_sku,0) as stock_sku_ratio_7,
       coalesce(stock_sku_15/stock_sku,0) as stock_sku_ratio_15,
       coalesce(stock_sku_40/stock_sku,0) as stock_sku_ratio_40,
       coalesce(stock_sku_365/stock_sku,0) as stock_sku_ratio_365,
       coalesce(stock_sku_365_last/stock_sku,0) as stock_sku_ratio_365_last,
       coalesce(final_amt_7/final_amt,0) as final_amt_ratio_7,
       coalesce(final_amt_15/final_amt,0) as final_amt_ratio_15,
       coalesce(final_amt_40/final_amt,0) as final_amt_ratio_40,
       coalesce(final_amt_365/final_amt,0) as final_amt_ratio_365,
       coalesce(final_amt_365_last/final_amt,0) as final_amt_ratio_365_last,
       purpose_code ,
       purpose_name ,
       joint_purchase_flag,
       current_timestamp(),
       ${hiveconf:dt}
from  csx_tmp.temp_turn_03 a
;
  