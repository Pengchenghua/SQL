<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>p_customer_visit</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2019/07/02 13:53:23.471</created_date>
  <modified_user>-</modified_user>
  <modified_date>2019/07/02 13:53:23.471</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>hive</name>
    <server>10.1.53.19</server>
    <type>HIVE2</type>
    <access>Native</access>
    <database>csx_dw</database>
    <port>10001</port>
    <username>pengchenghua</username>
    <password>Encrypted 2bed29fbf5dc8a294861eff68f8c6a18f</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>10001</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>pengxiaohe_impala</name>
    <server>10.1.53.19</server>
    <type>HIVE2</type>
    <access>Native</access>
    <database>b2b_tmp</database>
    <port>21051</port>
    <username>pengchenghua</username>
    <password>Encrypted 2bed29fbf5dc8a294861eff68f8c6a18f</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>21051</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>Start</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>80</xloc>
      <yloc>240</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>成功</name>
      <description/>
      <type>SUCCESS</type>
      <attributes/>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>832</xloc>
      <yloc>208</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>visit_custor</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>
set mapreduce.job.queuename=caishixian;
SET mapreduce.map.memory.mb = 5120;
SET hive.exec.parallel = TRUE;
-- 财务对帐周期
drop table if exists b2b_tmp.bill_data;
CREATE TEMPORARY TABLE if not exists b2b_tmp.bill_data
as
select 
'P001' payment_terms,'票到7天' payment_name
union all
select 
'P002' payment_terms,'票到15天' payment_name
union all
select 
'P003' payment_terms,'票到20天' payment_name
union all
select 
'P004' payment_terms,'票到30天' payment_name
union all
select 
'Y001' payment_terms,'月结10天' payment_name
union all
select 
'Y002' payment_terms,'月结15天' payment_name
union all
select 
'Y003' payment_terms,'月结30天' payment_name
union all
select 
'Y004' payment_terms,'月结45天' payment_name
union all
select 
'Y005' payment_terms,'月结60天' payment_name
union all
select 
'Y006' payment_terms,'月结90天' payment_name
union all
select 
'Z001' payment_terms,'双方另议' payment_name
union all
select 
'Z002' payment_terms,'票到7天' payment_name
union all
select 
'Z003' payment_terms,'票到15天' payment_name
union all
select 
'Z004' payment_terms,'票到30天' payment_name
union all
select 
'Z005'payment_terms,'票到45天' payment_name
union all
select 
'Z006'payment_terms,'票到60天' payment_name
union all
select 
'Z007'payment_terms,'预付货款' payment_name
union all
select 
'Z008'payment_terms,'票到8天' payment_name
;

-- 属性表    sys_customer_category_ods
 DROP
	TABLE
		IF EXISTS b2b_tmp.p_cust_info;

CREATE TEMPORARY
	TABLE
		IF NOT EXISTS b2b_tmp.p_cust_info AS
		SELECT
			a.id,
			a.customer_number,
			customer_name,
			channel,
			concat( first_category_code,'_',first_category )AS fist_category,
			concat( second_category_code,'_',second_category )AS second_category,
			concat( third_category_code,'_',third_category )AS third_category,
			archive_category,
			a.customer_type,
			social_credit_code,
			legal_person_name,
			legal_person_id_no,
			contacts,
			invoice_name,
			province_code,
			province_name,
			city_name,
			bank_no,
			bank_name,
			bank_account_name,
			bank_account_no,
			a.company_code,
			f.comp_name,
			a.payment_terms ,
			g.payment_name,
			pay_mode,
			payment_days,
			plan_sales_amount,
			sign_amount,
			taxes_category,
			sales_name,
			sales_id ,
			work_no,
			sales_province,
			sales_city,
			customer_level,
			credit_limit,
			temp_credit_limit,
			temp_begin_time,
			temp_end_time,
			credit_modulus,
			customer_status,
			channel_first_code,
			channel_second_code,
			org_code,
			org_name,
			distribution_channel,
			credit_range,
			contract_begin_time,
			contract_end_time,
			invoice_address,
			creator,
			create_time
		FROM
			(
			SELECT				 
				id,
				customer_no AS customer_number,
				customer_name as customer_name,
				channel,
				first_category_code,
				first_category,
				second_category_code,
				second_category,
				third_category_code,
				third_category,
				-- 档案分类：01法人，02政府/事业单位，03军队，04其他非法人，05一次性
				 archive_category,
				-- 合作模式：01长期；02临时
				customer_type ,
				social_credit_code,
				legal_person_name,
				legal_person_id_no,
				contacts,
				invoice_name,
				bank_no,
				bank_name,
				bank_account_name,
				bank_account_no,
				company_code,
				payment_terms,
				-- 01转账、02现金（刷卡）、03支票、04信控、05账扣
				case when pay_mode='01' THEN '01_转账' when pay_mode='02' THEN '02_现金(刷卡)'  when pay_mode='03' THEN '03_支票'
  				when pay_mode='04' THEN '04_信控 ' when pay_mode='05' THEN '05_帐扣' end pay_mode
				,
				-- 账期：01（无账期），02（7天），03（15天），04（30天），05（45天），06（60天），07（90天）
 CASE
					WHEN payment_days = '01' THEN '01_无账期'
					WHEN payment_days = '02' THEN '02_7天'
					WHEN payment_days = '03' THEN '03_15天'
					WHEN payment_days = '04' THEN '04_30天'
					WHEN payment_days = '05' THEN '05_45天'
					WHEN payment_days = '06' THEN '06_60天'
					WHEN payment_days = '07' THEN '07_90天'
				END payment_days,
				plan_sales_amount,
				sign_amount,
				--：0免税、1一般纳税人、2小规模纳税人
				case when taxes_category='0' then '0_免税' when taxes_category='1' then '1_一般纳税人' 
				when taxes_category='2' then '1_小规模纳税人' else taxes_category end taxes_category,
				sales_name,
				sales_id,
				work_no,
				sales_province,
				sales_city,
				province_code,
				province_name,
				city_name,
				CASE
					WHEN customer_level = 'AA' THEN 'AA优质'
					WHEN customer_level = 'A' THEN 'A良好'
					WHEN customer_level = 'B' THEN 'B良好'
					WHEN customer_level = 'C' THEN 'C一般'
					WHEN customer_level = 'D' THEN 'D风险'
				END customer_level,
				credit_limit,
				temp_credit_limit,
				to_date(temp_begin_time) temp_begin_time ,
				to_date(temp_end_time) temp_end_time,
				credit_modulus,
				CASE
					WHEN customer_status = '01' THEN '01_待审批'
					WHEN customer_status = '02' THEN '02_审批中'
					WHEN customer_status = '03' THEN '03_审批拒绝'
					WHEN customer_status = '04' THEN '04：审批通过'
				END customer_status,
				channel_first_code,
				channel_second_code,
				org_code,
				org_name,
				distribution_channel,
				credit_range,
				to_date(contract_begin_time) contract_begin_time,
				to_date(contract_end_time) contract_end_time,
				invoice_address,
				creator,
				to_date(create_time) create_time
			FROM
				csx_dw.customer_m a
			WHERE
				sdt = regexp_replace( to_date( date_sub( CURRENT_TIMESTAMP(),1 ) ),	'-','' )and source='crm' ) a
		LEFT JOIN ( 
					SELECT
				company_code comp_code,company_name comp_name
			FROM
				csx_dw.shop_m 
			WHERE sdt =regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP (),1)),'-','')
			GROUP BY
				company_code ,company_name) f ON
			a.company_code = f.comp_code		
	left JOIN 
	 b2b_tmp.bill_data g
	 on a.payment_terms =g.payment_terms
;
--  SELECT * from csx_dw.customer_m where sdt='20190826';
--  签约日期与新签约成交日期 无签约日期为空
 DROP
	TABLE
		IF EXISTS b2b_tmp.p_sign_info;

CREATE
	TEMPORARY TABLE
		IF NOT EXISTS b2b_tmp.p_sign_info AS 
		SELECT
			customer_no as cust_id,
			regexp_replace(to_date(sign_time),'-','') AS sign_date
		FROM
			csx_dw.customer_m
		WHERE
			sdt = regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP (),1)),'-','');
		
--	select * from csx_dw.customer_simple_info_v2 WHERE	sdt = regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP (),1)),	'-','');
-- 查询新签约成交时间
DROP TABLE IF EXISTS b2b_tmp.p_min_sale_sdt;
CREATE TEMPORARY TABLE IF NOT EXISTS  b2b_tmp.p_min_sale_sdt
as
SELECT a.cust_id,sign_date,min_sale_sdt FROM b2b_tmp.p_sign_info a
left JOIN
(
 SELECT
	customer_no cust_id,min(sdt)  as min_sale_sdt from csx_dw.sale_goods_m   GROUP by customer_no) b
on a.cust_id=b.cust_id ;

--  获取拜访最近日期 ,计算未拜访天数、及拜访模式      b2b_tmp.temp_visit 
 DROP
	TABLE
		IF EXISTS b2b_tmp.temp_visit ;
CREATE
	TEMPORARY TABLE
		IF NOT EXISTS b2b_tmp.temp_visit AS		
	select a.customer_no,a.customer_name,a.max_visit_time  as max_visit_time,visitor as sales_name,visitor_id ,customer_type,
	DATEDIFF( date_sub( CURRENT_TIMESTAMP(),1 ),to_date(a.max_visit_time) )AS days_not_visit
	from  
	 (
		SELECT
			customer_no ,
			customer_name ,
			visitor_id,
			visit_time max_visit_time,
			visitor,
			customer_type			
		FROM
			csx_dw.customer_visit_info_m a
		where  sdt=regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP (),	1)),'-','' )
		group by customer_no ,
			customer_name ,
			visitor_id,
			visit_time ,
			visitor,customer_type
		)a
		join 
	(SELECT
		customer_no,
		customer_name,
			MAX(visit_time)max_visit_time
		FROM
			csx_dw.customer_visit_info_m 
		WHERE sdt=regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP (),	1)),'-','' )
	group by customer_no,
		customer_name
	)b on  a.customer_no=b.customer_no and a.customer_name=b.customer_name and a.max_visit_time=b.max_visit_time 
		;
		
-- select * from b2b_tmp.temp_max_visit where customer_name like '%北京贝黎诗美容有限公司亚运村分公司%'
-- 销售最大日期
 DROP
	TABLE
		IF EXISTS b2b_tmp.p_sale_dt;

CREATE
	TEMPORARY TABLE
		IF NOT EXISTS b2b_tmp.p_sale_dt AS SELECT
			customer_no cust_id,
			sdt,
			SUM(b.sales_value) sales_value,
			SUM(profit) profit
		FROM
			csx_dw.sale_goods_m b
		WHERE
			sdt&lt;regexp_replace( to_date( CURRENT_TIMESTAMP() ),
			'-',
			'' )
			
		GROUP BY
			customer_no ,
			sdt;
-- 2.0计算最近销售
 DROP
	TABLE
		IF EXISTS b2b_tmp.p_max_sale;

CREATE
	TEMPORARY TABLE
		IF NOT EXISTS b2b_tmp.p_max_sale AS SELECT
			regexp_replace( customer_no ,'(^0*)','' ) AS cust_id,
			sdt,
			SUM(sales_value) sales_value,
			datediff( to_date( date_sub( CURRENT_TIMESTAMP(),1 ) ),	from_unixtime( unix_timestamp( sdt,'yyyymmdd' ),'yyyy-mm-dd' ) )days_not_sale
		FROM
			csx_dw.sale_goods_m a
		JOIN (
			SELECT
				a.cust_id,
				MAX(sdt)max_sdt
			FROM
				b2b_tmp.p_sale_dt a
			WHERE
				sales_value>0
			GROUP BY
				cust_id ) b ON
			a.sdt = b.max_sdt
			AND regexp_replace( customer_no ,'(^0*)','' )= regexp_replace( b.cust_id,'(^0*)','' )
		GROUP BY
			a.customer_no ,
			sdt;
-- 3.1 30天至一年销售下单次数、金额、客单价 b2b_tmp.p_order_data
 DROP
	TABLE
		IF EXISTS b2b_tmp.p_order_data;

CREATE
	TEMPORARY TABLE
		IF NOT EXISTS b2b_tmp.p_order_data AS SELECT
			cust_id,
			order_num_30,
			order_sale_30,
			order_sale_30 / order_num_30*1.00 order_avg_30,
			order_profit_30,
			order_num_90,
			order_sale_90,
			order_sale_90 / order_num_90*1.00 order_avg_90,
			order_profit_90,
			order_num_180,
			order_sale_180,
			order_sale_180 / order_num_180*1.00 order_avg_180,
			order_profit_180,
			order_num_365,
			order_sale_365,
			order_sale_365 / order_num_365*1.00 order_avg_365,
			order_profit_365
		FROM
			(
			SELECT
				cust_id,
				COUNT(CASE WHEN sales_value != 0 AND sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 30)), '-', '') THEN sdt END ) order_num_30,
				SUM(CASE WHEN sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 30)), '-', '') THEN sales_value END ) order_sale_30,
				SUM(CASE WHEN sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 30)), '-', '') THEN profit END ) order_profit_30,
				COUNT(CASE WHEN sales_value != 0 AND sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 90)), '-', '') THEN sdt END ) order_num_90,
				SUM(CASE WHEN sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 90)), '-', '') THEN sales_value END ) order_sale_90,
				SUM(CASE WHEN sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 90)), '-', '') THEN profit END ) order_profit_90,
				COUNT(CASE WHEN sales_value != 0 AND sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 180)), '-', '') THEN sdt END ) order_num_180,
				SUM(CASE WHEN sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 180)), '-', '') THEN sales_value END ) order_sale_180,
				SUM(CASE WHEN sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 180)), '-', '') THEN profit END ) order_profit_180,
				COUNT(CASE WHEN sales_value != 0 AND sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 365)), '-', '') THEN sdt END ) order_num_365,
				SUM(CASE WHEN sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 365)), '-', '') THEN sales_value END ) order_sale_365,
				SUM(CASE WHEN sdt >= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 365)), '-', '') THEN profit END ) order_profit_365
			FROM
				b2b_tmp.p_sale_dt
			GROUP BY
				cust_id )a;
-- 3.2 拜访量30、60、90、365天数据  b2b_tmp.p_visit_data;
 DROP
	TABLE
		IF EXISTS b2b_tmp.p_visit_data;

CREATE
	TEMPORARY TABLE
		IF NOT EXISTS b2b_tmp.p_visit_data AS SELECT
			customer_no,
			customer_name,
			SUM(visit_offline_30)visit_offline_30,
			SUM(visit_phone_30)visit_phone_30,
			SUM(visit_offline_90)visit_offline_90,
			SUM(visit_phone_90)visit_phone_90,
			SUM(visit_offline_180)visit_offline_180,
			SUM(visit_phone_180)visit_phone_180,
			SUM(visit_offline_365)visit_offline_365,
			SUM(visit_phone_365)visit_phone_365
		FROM
			(
			SELECT
				customer_no,
				customer_name,
				visitor,
				visitor_id,
				COUNT(DISTINCT CASE WHEN customer_type = 1 AND regexp_replace(to_date(visit_time), '-', '')>= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 30)), '-', '') THEN regexp_replace(to_date(visit_time), '-', '') END ) visit_offline_30,
				COUNT(DISTINCT CASE WHEN customer_type = 2 AND regexp_replace(to_date(visit_time), '-', '')>= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 30)), '-', '') THEN regexp_replace(to_date(visit_time), '-', '') END ) visit_phone_30,
				COUNT(DISTINCT CASE WHEN customer_type = 1 AND regexp_replace(to_date(visit_time), '-', '')>= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 90)), '-', '') THEN regexp_replace(to_date(visit_time), '-', '') END ) visit_offline_90,
				COUNT(DISTINCT CASE WHEN customer_type = 2 AND regexp_replace(to_date(visit_time), '-', '')>= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 90)), '-', '') THEN regexp_replace(to_date(visit_time), '-', '') END ) visit_phone_90,
				COUNT(DISTINCT CASE WHEN customer_type = 1 AND regexp_replace(to_date(visit_time), '-', '')>= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 180)), '-', '') THEN regexp_replace(to_date(visit_time), '-', '') END ) visit_offline_180,
				COUNT(DISTINCT CASE WHEN customer_type = 2 AND regexp_replace(to_date(visit_time), '-', '')>= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 180)), '-', '') THEN regexp_replace(to_date(visit_time), '-', '') END ) visit_phone_180,
				COUNT(DISTINCT CASE WHEN customer_type = 1 AND regexp_replace(to_date(visit_time), '-', '')>= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 365)), '-', '') THEN regexp_replace(to_date(visit_time), '-', '') END ) visit_offline_365,
				COUNT(DISTINCT CASE WHEN customer_type = 2 AND regexp_replace(to_date(visit_time), '-', '')>= regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(), 365)), '-', '') THEN regexp_replace(to_date(visit_time), '-', '') END ) visit_phone_365
			FROM
				csx_dw.customer_visit_info_m
			WHERE
				sdt = regexp_replace( to_date( date_sub( CURRENT_TIMESTAMP(),
				1 ) ),
				'-',
				'' )
			GROUP BY
				customer_no,
				customer_name,
				visitor,
				visitor_id )a
		GROUP BY
			customer_no,
			customer_name;
-- 统计汇总数据	
set hive.map.aggr = true;
set hive.groupby.skewindata=false;
set hive.exec.parallel=true;
set hive.exec.dynamic.partition=true; -- 开启动态分析
set hive.exec.dynamic.partition.mode=nonstrict; -- 动态分区模式
set hive.exec.max.dynamic.partitions.pernode=10000;-- 表示每个maper或reducer可以允许创建的最大动态分区个数
set mapreduce.job.queuename=caishixian;
insert overwrite table csx_dw.p_customer_visit PARTITION (sdt)	
 SELECT
id
, a.customer_number
, a.customer_name
, channel
, fist_category
, second_category
, third_category
, province_code
, province_name
, city_name
, a.sales_name
, work_no
, sales_province
, sales_city
, company_code
, a.comp_name
, archive_category
, a.customer_type
, social_credit_code
, legal_person_name
, legal_person_id_no
, contacts
, invoice_name
, bank_no
, bank_name
, bank_account_name
, bank_account_no
, payment_name
, pay_mode
,
-- 账期：01（无账期），02（7天），03（15天），04（30天），05（45天），06（60天），07（90天）
 payment_days
, taxes_category
, plan_sales_amount
, sign_amount
, customer_level
, credit_limit
, temp_credit_limit
, temp_begin_time
, temp_end_time
, credit_modulus
, customer_status
,
-- channel_first_code,
-- channel_second_code,
-- sale_organization,
-- distribution_channel,
-- sale_region,
-- credit_range --信控范围,
 org_code
, org_name
, contract_begin_time
, contract_end_time
, invoice_address
, creator
, create_time
, e.sign_date
, e.min_sale_sdt
, regexp_replace(to_date(max_visit_time)
, '-'
, '')max_visit_time
, visitor_id
, b.sales_name visitor
,
CASE
	WHEN b.customer_type = '1' THEN '1_上门'
	WHEN b.customer_type = '2' THEN '2_电话'
END visit_type
, days_not_visit
, c.sdt as max_sdt
, sales_value
, days_not_sale
, nvl(d.order_num_30, 0)order_num_30
, nvl(order_sale_30, 0)order_sale_30
, nvl(order_avg_30, 0)order_avg_30
, nvl(order_profit_30, 0)order_profit_30
, nvl(order_num_90, 0)order_num_90
, nvl(order_sale_90, 0)order_sale_90
, nvl(order_avg_90, 0)order_avg_90
, nvl(order_profit_90, 0)order_profit_90
, nvl(order_num_180, 0)order_num_180
, nvl(order_sale_180, 0)order_sale_180
, nvl(order_avg_180, 0)order_avg_180
, nvl(order_profit_180, 0)order_profit_180
, nvl(order_num_365, 0)order_num_365
, nvl(order_sale_365, 0)order_sale_365
, nvl(order_avg_365, 0)order_avg_365
, nvl(order_profit_365, 0)order_profit_365
, nvl(f.visit_offline_30, 0)visit_offline_30
, nvl(visit_phone_30, 0)visit_phone_30
, nvl(visit_offline_90, 0)visit_offline_90
, nvl(visit_phone_90, 0)visit_phone_90
, nvl(visit_offline_180, 0)visit_offline_180
, nvl(visit_phone_180, 0)visit_phone_180
, nvl(visit_offline_365, 0)visit_offline_365
, nvl(visit_phone_365, 0)visit_phone_365 
, regexp_replace(to_date(date_sub(CURRENT_TIMESTAMP(),1)),'-','') sdt
FROM
	b2b_tmp.p_cust_info a
LEFT JOIN (
	SELECT
		customer_no ,
		customer_name ,
		max_visit_time ,
		visitor_id,
		sales_name,
		customer_type,
		days_not_visit
	FROM
		b2b_tmp.temp_visit  a )b ON
	a.customer_number = b.customer_no
	AND a.customer_name = b.customer_name
LEFT JOIN 
(SELECT cust_id,sign_date,min_sale_sdt FROM  b2b_tmp.p_min_sale_sdt)e
on a.customer_number =e.cust_id
LEFT JOIN (
	SELECT
		cust_id,
		sdt,
		sales_value,
		days_not_sale
	FROM
		b2b_tmp.p_max_sale )c ON
	a.customer_number = c.cust_id
LEFT JOIN (
	SELECT
		cust_id,
		order_num_30,
		order_sale_30,
		order_avg_30,
		order_profit_30,
		order_num_90,
		order_sale_90,
		order_avg_90,
		order_profit_90,
		order_num_180,
		order_sale_180,
		order_avg_180,
		order_profit_180,
		order_num_365,
		order_sale_365,
		order_avg_365,
		order_profit_365
	FROM 
		b2b_tmp.p_order_data )d ON
	a.customer_number = d.cust_id
LEFT JOIN (
	SELECT
		customer_no,
		customer_name,
		visit_offline_30,
		visit_phone_30,
		visit_offline_90,
		visit_phone_90,
		visit_offline_180,
		visit_phone_180,
		visit_offline_365,
		visit_phone_365
	FROM
		b2b_tmp.p_visit_data )f ON
	a.customer_number = f.customer_no
	AND a.customer_name = f.customer_name;
	</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>hive</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>400</xloc>
      <yloc>240</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>refresh_metadata</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>refresh  csx_dw.p_customer_visit;
refresh dim.dim_goods;
refresh dim.dim_catg;
refresh dim.dim_vendor;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>pengxiaohe_impala</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>624</xloc>
      <yloc>512</yloc>
      <attributes_kjc/>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>visit_custor</from>
      <to>refresh_metadata</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>refresh_metadata</from>
      <to>成功</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Start</from>
      <to>visit_custor</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>
