


CREATE TABLE `csx_dw.ads_fis_r_a_customer_days_overdue_dtl`
	(	
		yeas string comment '年份',
		months string comment '月份',
		`channel` string      comment '渠道编码' ,
		`channel_code` string comment '渠道名称',
		`hkont` string        comment '科目代码' ,
		`account_name` string comment '科目名称' ,
		`comp_code` string    comment '公司代码' ,
		`comp_name` string    comment '公司名称' ,
		`shop_id` string      comment '门店编码,暂时为空' ,
		`shop_name` string    comment '门店名称，暂时为空' ,
		`customer_no` string  comment '编码' ,
		`customer_name` string comment '名称' ,
		`zterm` string        comment '帐期类型' ,
		`payment_days` int            comment '帐期天数',
		`payment_terms` string    comment '帐期类型说明',
		`sdate` string        comment '凭证日期',
		`edate` string        comment '帐期结束日期',
		`over_days` int       comment '逾期天数，负数未逾期，正数逾期' ,
		`ac_all` de           comment '金额，负数为回款金额，正数应收金额' ,
		write_time timestamp comment '插入时间'
	)comment '应收逾期明细'
	partitioned by (sdt string comment '分区日期，计算逾期天数')
	STORED AS parquet
	;
	
	

set mapreduce.job.queuename=caishixian;
--set hive.execution.engine=mr; 
set i_sdate                = '2020-04-25';
set i_date                 =date_add(${hiveconf:i_sdate},1);
drop table if exists csx_dw.csx_hepecc_bsid
;

CREATE temporary  table if NOT EXISTS csx_dw.csx_hepecc_bsid as
select
	a.hkont          ,
	a.bukrs comp_code,
	case
		when length(a.kunnr)<3
			then a.lifnr
			else a.kunnr
	end kunnr   ,
	a.budat     ,
	'A'as prctr    ,
--	shop_name,
	a.dmbtr     ,
	case
		when kunnr in ('V7126',
					   'V7127',
					   'V7128',
					   'V7129',
					   'V7130',
					   'V7131',
					   'V7132',
					   'V7000')
			then 'Y004'
			else coalesce(c.zterm,d.zterm)
	end zterm,
	case
		when kunnr in ('V7126',
					   'V7127',
					   'V7128',
					   'V7129',
					   'V7130',
					   'V7131',
					   'V7132',
					   'V7000')
			then 45
			else coalesce(c.diff,d.diff)
	end                                                                         diff ,
	concat(substr(a.budat,1,4),'-',substr(a.budat,5,2),'-',substr(a.budat,7,2)) sdate,
	case
		when kunnr in ('V7126',
					   'V7127',
					   'V7128',
					   'V7129',
					   'V7130',
					   'V7131',
					   'V7132',
					   'V7000')
			then date_add(last_day(concat(substr(a.budat,1,4),'-',substr(a.budat,5,2),'-',substr(a.budat,7,2))),45)
		when coalesce(c.zterm,d.zterm) like 'Y%'
			then date_add(last_day(concat(substr(a.budat,1,4),'-',substr(a.budat,5,2),'-',substr(a.budat,7,2))),COALESCE(c.diff,d.diff,0))
			else date_add(concat(substr(a.budat,1,4),'-',substr(a.budat,5,2),'-',substr(a.budat,7,2)),COALESCE(c.diff,d.diff,0))
	end edate
from
	(
		select *
		from
			ods_ecc.ecc_ytbcustomer
		where
			sdt      =regexp_replace(${hiveconf:i_date},'-','')
			and budat<regexp_replace(${hiveconf:i_date},'-','')
			and mandt='800'
			and
			(
				substr(hkont,1,3)<>'139'
				or
				(
					substr(hkont,1,3)='139'
					and budat       >='20190201'
				)
			)
	)
	a
	left join
		(
			select
				customer_number    ,
				company_code       ,
				payment_terms             zterm,
				cast(payment_days as int) diff
			from
				csx_dw.customer_account_day a
			where
				sdt                 ='current'
				and customer_number<>''
		)
		c
		on
			(
				lpad(a.kunnr,10,'0')=lpad(c.customer_number,10,'0')
				and a.bukrs         =c.company_code
			)
	left join
		(
			select
				customer_no        ,
				payment_terms             zterm,
				cast(payment_days as int) diff
			from
				csx_dw.dws_crm_w_a_customer_m
			where
				sdt             =regexp_replace(date_sub(current_date,1),'-','')
				and customer_no<>''
		)
		d
		on
			lpad(a.kunnr,10,'0')=lpad(d.customer_no,10,'0')
;
--select * from b2b.csx_hepecc_bsid where kunnr='0000107182'

drop table b2b_tmp.temp_account_out
;

CREATE temporary table b2b_tmp.temp_account_out as
select
	a.*,
	row_number() OVER(PARTITION BY hkont,comp_code,kunnr,prctr ORDER BY
					  budat asc)rno,
	sum(amount)over(PARTITION BY hkont,comp_code,kunnr,prctr order by
					budat asc ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING ) sum_sq,
	sum(amount)over(PARTITION BY hkont,comp_code,kunnr,prctr order by
					budat asc)sum_bq
from
	(
		select
			comp_code              ,
			kunnr                  ,
			hkont                  ,
			cast(budat as int)budat,
			prctr                  ,
		--	shop_name              ,
			sdate                  ,
			edate                  ,
			zterm                  ,
			diff                   ,
			sum(dmbtr)amount
		from
			csx_dw.csx_hepecc_bsid a
		where
			dmbtr>=0
		group by
			comp_code,
			kunnr    ,
			hkont    ,
			budat    ,
			prctr    ,
		--	shop_name,
			sdate    ,
			edate    ,
			zterm    ,
			diff
	)
	a
;

drop table b2b_tmp.temp_account_in
;

CREATE temporary table b2b_tmp.temp_account_in as
select
	hkont    ,
	comp_code,
	kunnr    ,
	prctr    ,
	sum(dmbtr)amount
from
	csx_dw.csx_hepecc_bsid a
where
	dmbtr<0
group by
	hkont    ,
	comp_code,
	kunnr    ,
	prctr
;

--已收账款不足应收账款
drop table b2b_tmp.temp_account_left
;

CREATE temporary table b2b_tmp.temp_account_left as
select
	a.comp_code,
	a.prctr    ,
--	a.shop_name,
	a.kunnr    ,
	a.hkont    ,
	a.budat    ,
	a.sdate    ,
	a.edate    ,
	zterm      ,
	diff       ,
	case
		when coalesce(a.sum_sq,0)+b.amount<0
			then a.sum_bq        +b.amount
			else a.amount
	end amount ,
	a.rno      ,
	a.sum_bq+b.amount amount_left
from
	b2b_tmp.temp_account_out a
	join
		b2b_tmp.temp_account_in b
		on
			(
				a.hkont        =b.hkont
				and a.comp_code=b.comp_code
				and a.kunnr    =b.kunnr
				and a.prctr    =b.prctr
			)
where
	a.sum_bq+b.amount>=0
--已收账款超过应收账款
union all
select
	a.comp_code              ,
	a.prctr                  ,
--	a.shop_name              ,
	a.kunnr                  ,
	a.hkont                  ,
	a.budat                  ,
	a.sdate                  ,
	a.edate                  ,
	zterm                    ,
	diff                     ,
	a.sum_bq+b.amount amount ,
	a.rno                    ,
	a.sum_bq+b.amount amount_left
from
	b2b_tmp.temp_account_out a
	join
		(
			select
				hkont    ,
				comp_code,
				kunnr    ,
				prctr    ,
				max(rno)rno_max
			from
				b2b_tmp.temp_account_out
			group by
				hkont    ,
				comp_code,
				kunnr    ,
				prctr
		)
		c
		on
			(
				a.hkont        =c.hkont
				and a.comp_code=c.comp_code
				and a.kunnr    =c.kunnr
				and a.rno      =c.rno_max
				and a.prctr    =c.prctr
			)
	join
		b2b_tmp.temp_account_in b
		on
			(
				a.hkont        =b.hkont
				and a.comp_code=b.comp_code
				and a.kunnr    =b.kunnr
				and a.prctr    =b.prctr
			)
where
	a.sum_bq+b.amount<0
--只有应收没有收款
union all
select
	a.comp_code,
	a.prctr    ,
--	a.shop_name,
	a.kunnr    ,
	a.hkont    ,
	a.budat    ,
	a.sdate    ,
	a.edate    ,
	zterm      ,
	diff       ,
	a.amount   ,
	a.rno      ,
	a.sum_bq amount_left
from
	b2b_tmp.temp_account_out a
	left join
		b2b_tmp.temp_account_in b
		on
			(
				a.hkont        =b.hkont
				and a.comp_code=b.comp_code
				and a.kunnr    =b.kunnr
				and a.prctr    =b.prctr
			)
where
	b.amount is null
union all
--只有预付没有收款
select
	a.comp_code     ,
	a.prctr         ,
--	a.shop_name     ,
	a.kunnr         ,
	a.hkont         ,
	a.budat         ,
	a.sdate         ,
	a.edate         ,
	zterm           ,
	diff            ,
	a.amount amount ,
	null     rno    ,
	a.amount amount_left
from
	(
		select
			comp_code              ,
			kunnr                  ,
			hkont                  ,
			cast(budat as int)budat,
			prctr                  ,
		--	shop_name              ,
			sdate                  ,
			edate                  ,
			zterm                  ,
			diff                   ,
			sum(dmbtr)amount
		from
			csx_dw.csx_hepecc_bsid a
		where
			dmbtr<0
		group by
			comp_code,
			kunnr    ,
			hkont    ,
			budat    ,
			prctr    ,
		--	shop_name,
			sdate    ,
			edate    ,
			zterm    ,
			diff
	)
	a
	left join
		(
			select
				hkont    ,
				comp_code,
				kunnr    ,
				prctr    ,
				sum(amount)amount
			from
				b2b_tmp.temp_account_out
			group by
				hkont    ,
				comp_code,
				kunnr    ,
				prctr
		)
		c
		on
			(
				a.hkont        =c.hkont
				and a.comp_code=c.comp_code
				and a.kunnr    =c.kunnr
				and a.prctr    =c.prctr
			)
where
	c.amount is null
;

-- set hive.exec.parallel              =true;
-- set hive.exec.parallel              =true;
-- set hive.exec.dynamic.partition     =true;
-- set hive.exec.dynamic.partition.mode=nonstrict;
-- insert overwrite table csx_dw.account_age_dtl_fct partition
-- 	(sdt
-- 	)
--DROP TABLE  csx_dw.customer_days_overdue;
set hive.exec.dynamic.partition.mode=nonstrict;
insert overwrite table csx_dw.ads_fis_r_a_customer_days_overdue_dtl partition(sdt)
 
select
c.channel,c.channel_code         ,
	a.hkont     as subject_code    ,
	d.account_name  as subject_name,
	a.comp_code     ,
	b.comp_name     ,
	regexp_replace(a.prctr,'(^0*)','')  as shop_id       ,
	'' as shop_name     ,
	regexp_replace(a.kunnr ,'(^0*)','') customer_no        ,
	customer_name ,
	zterm           ,
	diff as payment_days,
	case
		when zterm like 'Y%'
			then concat('月结',diff)
			else concat('票到',diff)
	end payment_terms,
	a.sdate,
	 a.edate,
	datediff(${hiveconf:i_sdate}, a.edate)as  over_days,
	sum	(amount)ac_all,
	from_utc_timestamp(current_timestamp(),'GMT') write_time,
	regexp_replace(${hiveconf:i_sdate},'-','')
from
	b2b_tmp.temp_account_left a
	join
		(
			select distinct
				comp_code,
				comp_name
			from
				dim.dim_shop
			where
				edate='9999-12-31'
		)
		b
		on
			a.comp_code=b.comp_code
			left join
		(select customer_no,customer_name,channel,channel_code from csx_dw.dws_crm_w_a_customer_m where sdt=regexp_replace(${hiveconf:i_sdate},'-','') ) c
		on
			lpad(a.kunnr,10,'0')=lpad(c.customer_no,10,'0')
	left join
		csx_dw.sap_account_type d
		on
			a.hkont=d.accunt_code
	left join 
	(select shop_name,location_code from csx_dw.csx_shop where sdt='current')e on regexp_replace(a.prctr,'(^0*)','') = e.location_code
		--	where a.kunnr='0000107469'
group by
	c.channel,c.channel_code     ,
	a.hkont       ,
	d.account_name,
	a.comp_code   ,
	b.comp_name   ,
	a.prctr       ,
--	e.shop_name   ,
	regexp_replace(a.kunnr ,'(^0*)','')      ,
	c.customer_name   ,
	zterm         ,
	diff,
	a.sdate,
	case
		when zterm like 'Y%'
			then concat('月结',diff)
			else concat('票到',diff)
	end,
	datediff(${hiveconf:i_sdate}, a.edate),	${hiveconf:i_sdate},
	 a.edate
;

-- 查询结果集
--计算逾期率
select
    channel,
    customer_no,
    customer_name,
    zterm,
    payment_days,
    payment_terms,
    comp_code,
    comp_name ,
    sum(case when over_days>0 then ac_all end ) as over_amt,
    SUM(case when over_days>0 then ac_all*over_days end ) as over_amt_1,
    SUM(ac_all)* payment_days as diff_ac_all,
    round(case when SUM(ac_all)* payment_days <= 0 then 0  else coalesce(SUM(case when over_days>0 then ac_all*over_days end ), 0)/ coalesce(SUM(ac_all)* payment_days, 0) end, 4) rate, 
sum(ac_all) as ac_all 
from csx_dw.ads_fis_r_a_customer_days_overdue_dtl a 
where channel = '大' and sdt = '20200425' 
group by channel, customer_no, customer_name, zterm, payment_days, payment_terms, comp_code, comp_name;

   -- 逾期明细
select *    from csx_dw.ads_fis_r_a_customer_days_overdue_dtl  where channel='大' and sdt='20200425';

